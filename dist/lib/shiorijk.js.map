{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2f303050b8c27d5104d1","webpack:///./D:/make/devel/shiorijk/lib/shiorijk.ts"],"names":[],"mappings":"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","file":"dist/lib/shiorijk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ShioriJK\"] = factory();\n\telse\n\t\troot[\"ShioriJK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2f303050b8c27d5104d1","/**\n * SHIORI/2.x/3.x Protocol Parser/Builder/Container\n *\n * (C) 2014-2018 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2018\n */\n\n/** SHIORI/2.x/3.x method */\nexport type Method =\n  \"GET\" |\n  \"NOTIFY\" |\n  \"GET Version\" |\n  \"GET Sentence\" |\n  \"GET Word\" |\n  \"GET Status\" |\n  \"TEACH\" |\n  \"GET String\" |\n  \"NOTIFY OwnerGhostName\" |\n  \"NOTIFY OtherGhostName\" |\n  \"TRANSLATE Sentence\";\n\n/** SHIORI protocol */\nexport type Protocol = \"SHIORI\";\n\n/** SHIORI version */\nexport type Version = \"2.0\" | \"2.2\" | \"2.3\" | \"2.4\" | \"2.5\" | \"2.6\" | \"3.0\";\n\n/**\n * SHIORI Protocol Message Container\n */\nexport namespace Message {\n  /** Message Containers' option */\n  export interface Options {\n    /** do not prepare default data by the constructor */\n    no_prepare?: boolean;\n  }\n\n  /** SHIORI Request Message like data */\n  export interface RequestLike {\n    /** request line */\n    request_line?: RequestLine | RequestLineLike;\n    /** request headers */\n    headers?: Headers.Request | {[name: string]: string};\n  }\n\n  /** SHIORI Request Message Container */\n  export class Request implements RequestLike {\n    /**\n     * RequestLine Container (ex. GET SHIORI/3.x)\n     */\n    request_line: RequestLine;\n    /** Headers Container */\n    headers: Headers.Request;\n\n    /**\n     * initialize request\n     * @param data request like data and options\n     */\n    constructor(data: RequestLike & Options = {}) {\n      const {request_line, headers, no_prepare} = data;\n\n      if (request_line == null) { // tslint:disable-line no-null-keyword\n        if (!no_prepare) this.request_line = new RequestLine();\n      } else {\n        if (request_line instanceof RequestLine) {\n          this.request_line = request_line;\n        } else {\n          this.request_line = new RequestLine(request_line);\n        }\n      }\n\n      if (headers == null) { // tslint:disable-line no-null-keyword\n        this.headers = new Headers.Request();\n      } else {\n        if (headers instanceof Headers.Request) {\n          this.headers = headers;\n        } else {\n          this.headers = new Headers.Request(headers);\n        }\n      }\n    }\n\n    /**\n     * Message to string\n     * @return message string\n     */\n    toString() {\n      return `${this.request_line}\\r\\n${this.headers}\\r\\n`;\n    }\n  }\n\n  /** SHIORI Response Message like data */\n  export interface ResponseLike {\n    /** status line */\n    status_line?: StatusLine | StatusLineLike;\n    /** response headers */\n    headers?: Headers.Response | {[name: string]: string};\n  }\n\n  /** SHIORI Response Message Container */\n  export class Response implements ResponseLike {\n    /** StatusLine Container */\n    status_line: StatusLine;\n\n    /** Headers Container */\n    headers: Headers.Response;\n\n    /**\n     * initialize response\n     * @param data response like data and options\n     */\n    constructor(data: ResponseLike & Options = {}) {\n      const {status_line, headers, no_prepare} = data;\n\n      if (status_line == null) { // tslint:disable-line no-null-keyword\n        if (!no_prepare) this.status_line = new StatusLine();\n      } else {\n        if (status_line instanceof StatusLine) {\n          this.status_line = status_line;\n        } else {\n          this.status_line = new StatusLine(status_line);\n        }\n      }\n\n      if (headers == null) { // tslint:disable-line no-null-keyword\n        this.headers = new Headers.Response();\n      } else {\n        if (headers instanceof Headers.Response) {\n          this.headers = headers;\n        } else {\n          this.headers = new Headers.Response(headers);\n        }\n      }\n    }\n\n    /**\n     * Message to string\n     * @return message string\n     */\n    toString() {\n      return `${this.status_line}\\r\\n${this.headers}\\r\\n`;\n    }\n  }\n}\n\n/** SHIORI Request Message's RequestLine like data */\nexport interface RequestLineLike {\n  /** method */\n  method?: Method;\n  /** protocol (default = \"SHIORI\") */\n  protocol?: Protocol;\n  /** version */\n  version?: Version;\n}\n\n/** SHIORI Request Message's RequestLine Container */\nexport class RequestLine implements RequestLineLike {\n  private readonly arguments: RequestLineLike = {};\n\n  /**\n   * initialize request line\n   * @param data request line like data\n   */\n  constructor(data: RequestLineLike = {}) {\n    const {method, protocol, version} = data;\n    if (method != null) { // tslint:disable-line no-null-keyword\n      this.method = method;\n    }\n    this.protocol = protocol || \"SHIORI\";\n    if (version != null) { // tslint:disable-line no-null-keyword\n      this.version = version;\n    }\n  }\n\n  /** request method */\n  get method(): Method | undefined {\n    return this.arguments.method;\n  }\n\n  set method(method: Method | undefined) {\n    if ((method != null) && (this.version != null)) { // tslint:disable-line no-null-keyword\n      this.validate_method_version(method, this.version);\n    } else if (method != null) { // tslint:disable-line no-null-keyword\n      switch (method) {\n        case \"GET\":\n        case \"NOTIFY\":\n        case \"GET Version\":\n        case \"GET Sentence\":\n        case \"GET Word\":\n        case \"GET Status\":\n        case \"TEACH\":\n        case \"GET String\":\n        case \"NOTIFY OwnerGhostName\":\n        case \"NOTIFY OtherGhostName\":\n        case \"TRANSLATE Sentence\":\n          break;\n        default:\n          throw `Invalid protocol method : ${method}`;\n      }\n    }\n    this.arguments.method = method;\n  }\n\n  /** protocol */\n  get protocol(): Protocol | undefined {\n    return this.arguments.protocol;\n  }\n\n  set protocol(protocol: Protocol | undefined) {\n    if ((protocol != null) && protocol !== \"SHIORI\") { // tslint:disable-line no-null-keyword\n      throw `Invalid protocol : ${protocol}`;\n    }\n    this.arguments.protocol = protocol;\n  }\n\n  /** version */\n  get version(): Version | undefined {\n    return this.arguments.version;\n  }\n\n  set version(version: Version | undefined) {\n    if ((this.method != null) && (version != null)) { // tslint:disable-line no-null-keyword\n      this.validate_method_version(this.method, version);\n    } else if (version != null) { // tslint:disable-line no-null-keyword\n      switch (version) {\n        case \"2.0\":\n        case \"2.2\":\n        case \"2.3\":\n        case \"2.4\":\n        case \"2.5\":\n        case \"2.6\":\n        case \"3.0\":\n          break;\n        default:\n          throw `Invalid protocol version : ${version}`;\n      }\n    }\n    this.arguments.version = version;\n  }\n\n  /**\n   * validate\n   * @param method method\n   * @param version version\n   * @throw if invalid\n   */\n  validate_method_version(method: Method, version: Version) { // tslint:disable-line prefer-function-over-method\n    let is_valid = false;\n    // tslint:disable switch-default\n    switch (version) {\n      case \"2.0\":\n        switch (method) {\n          case \"GET Version\":\n          case \"NOTIFY OwnerGhostName\":\n          case \"GET Sentence\":\n          case \"GET Word\":\n          case \"GET Status\":\n            is_valid = true;\n        }\n        break;\n      case \"2.2\":\n        switch (method) {\n          case \"GET Sentence\":\n            is_valid = true;\n        }\n        break;\n      case \"2.3\":\n        switch (method) {\n          case \"NOTIFY OtherGhostName\":\n          case \"GET Sentence\":\n            is_valid = true;\n        }\n        break;\n      case \"2.4\":\n        switch (method) {\n          case \"TEACH\":\n            is_valid = true;\n        }\n        break;\n      case \"2.5\":\n        switch (method) {\n          case \"GET String\":\n            is_valid = true;\n        }\n        break;\n      case \"2.6\": // spec is unknown\n        switch (method) {\n          case \"GET Sentence\":\n          case \"GET Status\":\n          case \"GET String\":\n          case \"NOTIFY OwnerGhostName\":\n          case \"NOTIFY OtherGhostName\":\n          case \"GET Version\":\n          case \"TRANSLATE Sentence\":\n            is_valid = true;\n        }\n        break;\n      case \"3.0\":\n        switch (method) {\n          case \"GET\":\n          case \"NOTIFY\":\n            is_valid = true;\n        }\n    }\n    // tslint:enable switch-default\n    if (!is_valid) {\n      throw `Invalid protocol method and version : ${method} SHIORI/${version}`;\n    }\n  }\n\n  /**\n   * Message to string\n   * @return message string\n   */\n  toString() {\n    return `${this.method} ${this.protocol}/${this.version}`;\n  }\n}\n\nconst RequestLineClass = RequestLine; // tslint:disable-line variable-name\n\n/** SHIORI Response Message's StatusLine like data */\nexport interface StatusLineLike {\n  /** status code */\n  code?: number;\n  /** protocol (default = \"SHIORI\") */\n  protocol?: Protocol;\n  /** version */\n  version?: Version;\n}\n\n/** SHIORI Response Message's StatusLine Container */\nexport class StatusLine implements StatusLineLike {\n  /** status messages for status codes */\n  message: {[code: number]: string};\n\n  private readonly arguments: StatusLineLike = {};\n\n  /**\n   * initialize status line\n   * @param data status line like data\n   */\n  constructor(data: StatusLineLike = {}) {\n    const {code, protocol, version} = data;\n    if (code != null) { // tslint:disable-line no-null-keyword\n      this.code = code;\n    }\n    this.protocol = protocol || \"SHIORI\";\n    if (version != null) { // tslint:disable-line no-null-keyword\n      this.version = version;\n    }\n  }\n\n  /** status code */\n  get code() {\n    return this.arguments.code;\n  }\n\n  set code(code) {\n    if ((code != null) && (this.message[code] == null)) { // tslint:disable-line no-null-keyword\n      throw `Invalid response code : ${code}`;\n    }\n    this.arguments.code = code;\n  }\n\n  /** protocol */\n  get protocol(): Protocol | undefined {\n    return this.arguments.protocol;\n  }\n\n  set protocol(protocol: Protocol | undefined) {\n    if ((protocol != null) && protocol !== \"SHIORI\") { // tslint:disable-line no-null-keyword\n      throw `Invalid protocol : ${protocol}`;\n    }\n    this.arguments.protocol = protocol;\n  }\n\n  /** version */\n  get version(): Version | undefined {\n    return this.arguments.version;\n  }\n\n  set version(version: Version | undefined) {\n    if (version != null) { // tslint:disable-line no-null-keyword\n      switch (version) {\n        case \"2.0\":\n        case \"2.2\":\n        case \"2.3\":\n        case \"2.4\":\n        case \"2.5\":\n        case \"2.6\":\n        case \"3.0\":\n          break;\n        default:\n          throw `Invalid protocol version : ${version}`;\n      }\n    }\n    this.arguments.version = version;\n  }\n\n  /**\n   * Message to string\n   * @return message string\n   */\n  toString() {\n    return `${this.protocol}/${this.version} ${this.code} ${this.message[this.code as number]}`;\n  }\n\n}\n\nStatusLine.prototype.message = {\n  200: \"OK\",\n  204: \"No Content\",\n  310: \"Communicate\",\n  311: \"Not Enough\",\n  312: \"Advice\",\n  400: \"Bad Request\",\n  418: \"I'm a tea pot\",\n  500: \"Internal Server Error\",\n};\n\nconst StatusLineClass = StatusLine; // tslint:disable-line variable-name\n\n/** SHIORI Message Headers Container */\nexport class Headers {\n  /** headers */\n  header: {[name: string]: string | undefined};\n\n  /**\n   * initialize headers\n   * @param header headers\n   */\n  constructor(header: {[name: string]: string} = {}) {\n    this.header = header;\n  }\n\n  /**\n   * get header\n   * @param name header name\n   * @return header value\n   */\n  get(name: string) {\n    return this.header[name];\n  }\n\n  /**\n   * set header\n   * @param name header name\n   * @param value header value\n   * @return header value\n   */\n  set(name: string, value: string) {\n    return this.header[name] = value;\n  }\n\n  /**\n   * get header separated by \\x01 or some as an array\n   * @param name header name\n   * @param separator separator characters\n   * @return header values\n   */\n  get_separated(name: string, separator = \"\\x01\") {\n    const value = this.header[name];\n    if (value != null) { // tslint:disable-line no-null-keyword\n      return value.split(separator);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * set header separated by \\x01 or some as an array\n   * @param name header name\n   * @param value header values\n   * @param separator separator characters\n   * @return header value\n   */\n  set_separated(name: string, value: string[], separator = \"\\x01\") {\n    return this.header[name] = value.join(separator);\n  }\n\n  /**\n   * get header separated by \\x02 and \\x01 or some as an array\n   * @param name header name\n   * @param separator1 first level separator characters\n   * @param separator2 second level separator characters\n   * @return header values\n   */\n  get_separated2(name: string, separator1 = \"\\x02\", separator2 = \"\\x01\") {\n    const value = this.header[name];\n    if (value != null) { // tslint:disable-line no-null-keyword\n      return value.split(separator1).map((value1) => value1.split(separator2));\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * set header separated by \\x02 and \\x01 or some as an array\n   * @param name header name\n   * @param value header values\n   * @param separator1 first level separator characters\n   * @param separator2 second level separator characters\n   * @return header value\n   */\n  set_separated2(name: string, value: string[][], separator1 = \"\\x02\", separator2 = \"\\x01\") {\n    return this.header[name] = value.map((value1) => value1.join(separator2)).join(separator1);\n  }\n\n  /**\n   * get Reference* headers\n   * @return Reference* header values\n   */\n  references() {\n    let reference_max_index = -1;\n    // forin for compatibility\n    for (const name in this.header) { // tslint:disable-line forin\n      const result = /^Reference(\\d+)$/.exec(name);\n      if (result && reference_max_index < Number(result[1])) {\n        reference_max_index = Number(result[1]);\n      }\n    }\n    const references: Array<string | undefined> = new Array(reference_max_index + 1);\n    for (let index = 0; index <= reference_max_index; ++index) {\n      references[index] = this.header[`Reference${index}`];\n    }\n\n    return references;\n  }\n\n  /**\n   * check that headers are line feed free\n   * @throw if not\n   */\n  validate() {\n    // forin for compatibility\n    for (const name in this.header) { // tslint:disable-line forin\n      const value = this.header[name];\n      if (`${value}`.match(/\\n/)) {\n        throw `Invalid header value - line feed found : [${name}] : ${value}`;\n      }\n    }\n  }\n\n  /**\n   * Message to string\n   * @return message string\n   */\n  toString() {\n    this.validate();\n    let str = \"\";\n    // forin for compatibility\n    for (const name in this.header) { // tslint:disable-line forin\n      const value = this.header[name];\n      str += `${name}: ${value}\\r\\n`;\n    }\n\n    return str;\n  }\n\n  /**\n   * Reference* header (SHIORI/2.2-2.6,3.x)\n   * @param index reference index\n   * @return header value\n   */\n  Reference(index: number) {\n    return this.get(`Reference${index}`);\n  }\n\n  /**\n   * Reference* header (SHIORI/2.2-2.6,3.x)\n   * @param index reference index\n   * @param separator separator characters\n   * @return header values\n   */\n  ReferenceSeparated(index: number, separator = \"\\x01\") {\n    return this.get_separated(`Reference${index}`, separator) || [];\n  }\n\n  /**\n   * Reference* header (SHIORI/2.2-2.6,3.x)\n   * @param index reference index\n   * @param separator1 first level separator characters\n   * @param separator2 second level separator characters\n   * @return header values\n   */\n  ReferenceSeparated2(index: number, separator1 = \"\\x02\", separator2 = \"\\x01\") {\n    return this.get_separated2(`Reference${index}`, separator1, separator2) || [];\n  }\n\n}\n\nexport namespace Headers {\n  /** SHIORI Request Message Headers Container */\n  export class Request extends Headers {\n    /** Charset header */\n    get Charset() {\n      return this.get(\"Charset\");\n    }\n\n    /** Sender header */\n    get Sender() {\n      return this.get(\"Sender\");\n    }\n\n    /** SecurityLevel header (SHIORI/2.2,2.6,3.x) */\n    get SecurityLevel() {\n      return this.get(\"SecurityLevel\");\n    }\n\n    /** ID header (SHIORI/2.5,3.x) */\n    get ID() {\n      return this.get(\"ID\");\n    }\n\n    /** Event header (SHIORI/2.2) */\n    get Event() {\n      return this.get(\"Event\");\n    }\n\n    /** Type header (GET Word SHIORI/2.0) */\n    get Type() {\n      return this.get(\"Type\");\n    }\n\n    /** Status header (SHIORI/3.1) */\n    get Status() {\n      return (this.get_separated(\"Status\", \",\")) || [];\n    }\n\n    /** Ghost header (NOTIFY OwnerGhostName SHIORI/2.0,2.3) */\n    get Ghost() {\n      return this.get(\"Ghost\");\n    }\n\n    /** Sentence header (SHIORI/2.0,2.3b) */\n    get Sentence() {\n      return this.get(\"Sentence\");\n    }\n\n    /** To header (SHIORI/2.3b) */\n    get To() {\n      return this.get(\"To\");\n    }\n\n    /** Age header (SHIORI/2.3b) */\n    get Age() {\n      const age = this.get(\"Age\");\n\n      return age == null ? undefined : Number(age); // tslint:disable-line no-null-keyword\n    }\n\n    /** Surface header (SHIORI/2.3b) */\n    get Surface() {\n      return (this.get_separated(\"Surface\", \",\") || []).map(Number);\n    }\n\n    /** Word header (TEACH SHIORI/2.4) */\n    get Word() {\n      return this.get(\"Word\");\n    }\n  }\n\n  /** SHIORI Response Message Headers Container */\n  export class Response extends Headers {\n    /**\n     * String header (GET String SHIORI/2.5)\n     * @param separator separator characters\n     * @return header values\n     */\n    StringSeparated(separator = \"\\x01\") {\n      return this.get_separated(\"String\", separator) || [];\n    }\n\n    /**\n     * String header (GET String SHIORI/2.5)\n     * @param separator1 first level separator characters\n     * @param separator2 second level separator characters\n     * @return header values\n     */\n    StringSeparated2(separator1 = \"\\x02\", separator2 = \"\\x01\") {\n      return this.get_separated2(\"String\", separator1, separator2) || [];\n    }\n\n    /**\n     * Value header (GET SHIORI/3.0)\n     * @param separator separator characters\n     * @return header values\n     */\n    ValueSeparated(separator = \"\\x01\") {\n      return this.get_separated(\"Value\", separator) || [];\n    }\n\n    /**\n     * Value header (GET SHIORI/3.0)\n     * @param separator1 first level separator characters\n     * @param separator2 second level separator characters\n     * @return header values\n     */\n    ValueSeparated2(separator1 = \"\\x02\", separator2 = \"\\x01\") {\n      return this.get_separated2(\"Value\", separator1, separator2) || [];\n    }\n\n    /** BalloonOffset header (SHIORI/2.0) */\n    get BalloonOffset() {\n      return (this.get_separated2(\"BalloonOffset\", \",\") || []).map((value1) => value1.map(Number));\n    }\n\n    /** Surface header (SHIORI/2.3b) */\n    get Surface() {\n      return (this.get_separated(\"Surface\", \",\") || []).map(Number);\n    }\n\n    /** Sentence header (SHIORI/2.0,2.2,2.3b,2.4) */\n    get Sentence() {\n      return this.get(\"Sentence\");\n    }\n\n    /** Word header (GET Word SHIORI/2.0) */\n    get Word() {\n      return this.get(\"Word\");\n    }\n\n    /** Status header (GET Status SHIORI/2.0) */\n    get Status() {\n      return (this.get_separated(\"Status\", \",\") || []).map(Number);\n    }\n\n    /** String header (GET String SHIORI/2.5) */\n    get String() {\n      return this.get(\"String\");\n    }\n\n    /** Value header (GET SHIORI/3.0) */\n    get Value() {\n      return this.get(\"Value\");\n    }\n  }\n}\n\nexport namespace Shiori {\n  /** parser base class */\n  export abstract class Parser<Container> {\n    section: Section;\n    result: Container;\n    parsers: {[name: string]: {abort_parse?(): void}};\n\n    is_parsing() {\n      return !this.section.is(\"idle\");\n    }\n\n    is_parsing_end() {\n      return !this.section.is(\"end\");\n    }\n\n    /**\n     * get parser result\n     * @return result\n     */\n    get_result() {\n      return this.result;\n    }\n\n    /**\n     * build result container\n     * @return empty result container\n     */\n    abstract result_builder(): Container;\n\n    /**\n     * set section state to first section\n     * @throw if before section != 'idle'\n     */\n    begin_parse() {\n      if (!this.section.is(\"idle\")) {\n        throw \"cannot begin parsing because previous transaction is still working\";\n      }\n      this.result = this.result_builder();\n\n      return this.section.next();\n    }\n\n    /**\n     * set section state to begining section\n     * @throw if before section != 'end'\n     */\n    end_parse() {\n      if (!this.section.is(\"end\")) {\n        this.abort_parse();\n        throw \"parsing was aborted\";\n      }\n\n      return this.section.next();\n    }\n\n    /**\n     * set section state to begining section FORCE!\n     *\n     * @note recursively abort parsing\n     */\n    abort_parse() {\n      if (this.parsers != null) { // tslint:disable-line no-null-keyword\n        // forin for compatibility\n        for (const name in this.parsers) { // tslint:disable-line forin\n          const parser = this.parsers[name];\n          if (parser.abort_parse != null) { // tslint:disable-line no-null-keyword\n            parser.abort_parse();\n          }\n        }\n      }\n\n      return this.section.set(\"idle\");\n    }\n\n    /**\n     * parse a transaction\n     * @param transaction complete transaction\n     * @return parse_chunk()'s one result\n     * @throw if transaction is not complete\n     */\n    parse(transaction: string) {\n      this.begin_parse();\n      const result = this.parse_chunk(transaction);\n      if (this.is_parsing()) {\n        throw \"transaction is not closed\";\n      }\n      if (result.results.length !== 1) {\n        throw \"multiple transaction\";\n      }\n\n      return result.results[0];\n    }\n\n    /**\n     * parse transaction chunk\n     * @param chunk transaction chunk\n     * @return parse_lines()'s results\n     */\n    parse_chunk(chunk: string) {\n      const lines = chunk.split(/\\r\\n/);\n      if (chunk.match(/\\r\\n$/)) {\n        lines.pop();\n      }\n\n      return this.parse_lines(lines);\n    }\n\n    /**\n     * parse chunk lines\n     * @param lines transaction chunk separated by \\r\\n\n     * @return results: parse_line()'s result, state: parser state\n     */\n    parse_lines(lines: string[]) {\n      let result: {result?: undefined; state: \"continue\"} | {result: Container; state: \"end\"} | undefined;\n      const results = [];\n      for (const line of lines) {\n        result = this.parse_line(line);\n        if (result.state === \"end\") {\n          results.push(result.result);\n        }\n      }\n      if (!result) throw \"must provide at least one lines\";\n\n      return {\n        results,\n        state: result.state,\n      };\n    }\n\n    /**\n     * parse line\n     * @param line transaction line separated by \\r\\n\n     * @return results: result (if state is end), state: parser state\n     */\n    parse_line(line: string): {result?: undefined; state: \"continue\"} | {result: Container; state: \"end\"} {\n      if (this.section.is(\"idle\")) {\n        this.begin_parse();\n      }\n      this.parse_main(line);\n      if (this.section.is(\"end\")) {\n        this.end_parse();\n\n        return {\n          result: this.get_result(),\n          state: \"end\",\n        };\n      } else {\n        return {\n          state: \"continue\",\n        };\n      }\n    }\n\n    /**\n     * parser main routine\n     */\n    abstract parse_main(line: string): void;\n  }\n\n  /** parser section state manager */\n  export class Section {\n    readonly sections: string[];\n    private index = 0;\n\n    constructor(sections: string[]) {\n      this.sections = sections;\n    }\n\n    is(section: string) {\n      return this.sections[this.index] === section;\n    }\n\n    next() {\n      if (this.index === this.sections.length - 1) {\n        return this.index = 0;\n      } else {\n        return this.index++;\n      }\n    }\n\n    previous() {\n      if (this.index === 0) {\n        return this.index = this.sections.length - 1;\n      } else {\n        return this.index--;\n      }\n    }\n\n    set(section: string) {\n      return this.index = this.sections.indexOf(section);\n    }\n\n    get() {\n      return this.sections[this.index];\n    }\n  }\n\n  export namespace Header {\n    // tslint:disable-next-line no-shadowed-variable\n    export abstract class Parser<Container extends Headers> extends Shiori.Parser<Container> {\n      parse_main(line: string) {\n        const result = this.parse_header(line);\n        if (result.state === \"end\") {\n          this.section.next();\n        }\n      }\n\n      parse_header(line: string) {\n        if (line.length) {\n          const result = line.match(/^(.+?): (.*)$/);\n          if (result) {\n            this.result.header[result[1]] = result[2];\n          } else {\n            throw `Invalid header line : ${line}`;\n          }\n\n          return {\n            state: \"continue\",\n          };\n        } else {\n          return {\n            state: \"end\",\n          };\n        }\n      }\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export class Section extends Shiori.Section {\n      constructor(sections = [\"idle\", \"header\", \"end\"]) {\n        super(sections);\n      }\n    }\n  }\n\n  export namespace Request {\n    /** SHIORI Request parser */\n    // tslint:disable-next-line no-shadowed-variable\n    export  class Parser extends Shiori.Parser<Message.Request> {\n      parsers = {\n        request_line: new RequestLine.Parser(),\n        headers: new Header.Parser(),\n      };\n\n      section = new Section();\n\n      result_builder() { // tslint:disable-line prefer-function-over-method\n        return new Message.Request({\n          no_prepare: true,\n        });\n      }\n\n      parse_main(line: string) {\n        const section = this.section.get() as \"request_line\" | \"headers\";\n        const parser = this.parsers[section];\n        const parser_result = parser.parse_line(line);\n        if (parser_result.state === \"end\") {\n          this.result[section] = parser_result.result;\n          this.section.next();\n        }\n      }\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export namespace RequestLine {\n      // tslint:disable-next-line no-shadowed-variable\n      export class Parser {\n        result: RequestLine;\n\n        result_builder() { // tslint:disable-line prefer-function-over-method\n          return new RequestLineClass();\n        }\n\n        parse(transaction: string) {\n          return this.parse_chunk(transaction);\n        }\n\n        parse_chunk(chunk: string) {\n          return this.parse_line(chunk);\n        }\n\n        parse_line(line: string): {result: RequestLine; state: \"end\"} {\n          const result = line.match(/^([A-Za-z0-9 ]+) SHIORI\\/([0-9.]+)/);\n          if (!result) {\n            throw `Invalid request line : ${line}`;\n          }\n          this.result = this.result_builder();\n          this.result.method = result[1] as Method;\n          this.result.protocol = \"SHIORI\";\n          this.result.version = result[2] as Version;\n\n          return {\n            result: this.result,\n            state: \"end\",\n          };\n        }\n\n        abort_parse() {} // tslint:disable-line prefer-function-over-method no-empty\n      }\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export namespace Header {\n      // tslint:disable-next-line no-shadowed-variable\n      export class Parser extends Shiori.Header.Parser<Headers.Request> {\n        constructor() {\n          super();\n          this.section = new Section();\n        }\n\n        result_builder() { // tslint:disable-line prefer-function-over-method\n          return new Headers.Request();\n        }\n      }\n\n      // tslint:disable-next-line no-shadowed-variable\n      export class Section extends Shiori.Header.Section {}\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export class Section extends Shiori.Section {\n      constructor(sections = [\"idle\", \"request_line\", \"headers\", \"end\"]) {\n        super(sections);\n      }\n    }\n  }\n\n  export namespace Response {\n    /** SHIORI Response parser */\n    // tslint:disable-next-line no-shadowed-variable\n    export class Parser extends Shiori.Parser<Message.Response> {\n      parsers = {\n        status_line: new StatusLine.Parser(),\n        headers: new Header.Parser(),\n      };\n\n      section = new Section();\n\n      result_builder() { // tslint:disable-line prefer-function-over-method\n        return new Message.Response({\n          no_prepare: true,\n        });\n      }\n\n      parse_main(line: string) {\n        const section = this.section.get() as \"status_line\" | \"headers\";\n        const parser = this.parsers[section];\n        const parser_result = parser.parse_line(line);\n        if (parser_result.state === \"end\") {\n          this.result[section] = parser_result.result;\n          this.section.next();\n        }\n      }\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export namespace StatusLine {\n      // tslint:disable-next-line no-shadowed-variable\n      export class Parser {\n        result: StatusLine;\n\n        result_builder() { // tslint:disable-line prefer-function-over-method\n          return new StatusLineClass();\n        }\n\n        parse(transaction: string) {\n          return this.parse_chunk(transaction);\n        }\n\n        parse_chunk(chunk: string) {\n          return this.parse_line(chunk);\n        }\n\n        parse_line(line: string): {result: StatusLine; state: \"end\"} {\n          const result = line.match(/^SHIORI\\/([0-9.]+) (\\d+) (.+)$/);\n          if (!result) {\n            throw `Invalid status line : ${line}`;\n          }\n          this.result = this.result_builder();\n          this.result.protocol = \"SHIORI\";\n          this.result.version = result[1] as Version;\n          this.result.code = Number(result[2]);\n\n          return {\n            result: this.result,\n            state: \"end\",\n          };\n        }\n\n        abort_parse() {} // tslint:disable-line prefer-function-over-method no-empty\n      }\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export namespace Header {\n      // tslint:disable-next-line no-shadowed-variable\n      export class Parser extends Shiori.Header.Parser<Headers.Response> {\n        constructor() {\n          super();\n          this.section = new Section();\n        }\n\n        result_builder() { // tslint:disable-line prefer-function-over-method\n          return new Headers.Response();\n        }\n      }\n\n    // tslint:disable-next-line no-shadowed-variable\n      export class Section extends Shiori.Header.Section {}\n    }\n\n    // tslint:disable-next-line no-shadowed-variable\n    export class Section extends Shiori.Section {\n      constructor(sections = [\"idle\", \"status_line\", \"headers\", \"end\"]) {\n        super(sections);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./D:/make/devel/shiorijk/lib/shiorijk.ts"],"sourceRoot":""}